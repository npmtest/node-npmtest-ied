{"/home/travis/build/npmtest/node-npmtest-ied/test.js":"/* istanbul instrument in package npmtest_ied */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ied/lib.npmtest_ied.js":"/* istanbul instrument in package npmtest_ied */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ied = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ied = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ied/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ied && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ied */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ied\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ied.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ied.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ied.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ied.__dirname + '/lib.npmtest_ied.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/cmd.js":"#!/usr/bin/env node\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _minimist = require('minimist');\n\nvar _minimist2 = _interopRequireDefault(_minimist);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (['development', 'test'].indexOf(process.env.NODE_ENV) !== -1) {\n\trequire('source-map-support').install();\n}\n\nvar alias = {\n\th: 'help',\n\tv: 'version',\n\tS: 'save',\n\tD: 'save-dev',\n\tO: 'save-optional',\n\tr: 'registry',\n\tb: 'build',\n\tprod: 'production'\n};\n\nvar string = ['registry'];\n\nvar boolean = ['help', 'version', 'save', 'save-dev', 'save-optional', 'build', 'production'];\n\nvar cwd = process.cwd();\nvar argv = (0, _minimist2.default)(process.argv.slice(2), { alias: alias, string: string, boolean: boolean });\n\nif (argv.registry) {\n\tconfig.registry = argv.registry;\n}\n\nvar installCmd = void 0;\nvar shellCmd = void 0;\nvar runCmd = void 0;\nvar pingCmd = void 0;\nvar configCmd = void 0;\nvar initCmd = void 0;\nvar linkCmd = void 0;\nvar unlinkCmd = void 0;\nvar helpCmd = void 0;\nvar versionCmd = void 0;\nvar cacheCmd = void 0;\n\n(function () {\n\tif (argv.help) {\n\t\thelpCmd = require('./help_cmd').default;\n\t\thelpCmd().subscribe();\n\t\treturn;\n\t}\n\n\tif (argv.version) {\n\t\tversionCmd = require('./version_cmd').default;\n\t\tversionCmd().subscribe();\n\t\treturn;\n\t}\n\n\tvar _argv$_ = _slicedToArray(argv._, 1),\n\t    subCommand = _argv$_[0];\n\n\tswitch (subCommand) {\n\t\tcase 'i':\n\t\tcase 'install':\n\t\t\tinstallCmd = require('./install_cmd').default;\n\t\t\tinstallCmd(cwd, argv).subscribe();\n\t\t\tbreak;\n\t\tcase 'sh':\n\t\tcase 'shell':\n\t\t\tshellCmd = require('./shell_cmd').default;\n\t\t\tshellCmd(cwd).subscribe();\n\t\t\tbreak;\n\t\tcase 'r':\n\t\tcase 'run':\n\t\tcase 'run-script':\n\t\t\trunCmd = require('./run_cmd').default;\n\t\t\trunCmd(cwd, argv).subscribe();\n\t\t\tbreak;\n\t\tcase 't':\n\t\tcase 'test':\n\t\tcase 'start':\n\t\tcase 'build':\n\t\tcase 'stop':\n\t\t\trunCmd = require('./run_cmd').default;\n\t\t\trunCmd(cwd, _extends({}, argv, { _: ['run'].concat(argv._) })).subscribe();\n\t\t\tbreak;\n\t\tcase 'ping':\n\t\t\tpingCmd = require('./ping_cmd').default;\n\t\t\tpingCmd();\n\t\t\tbreak;\n\t\tcase 'conf':\n\t\tcase 'config':\n\t\t\tconfigCmd = require('./config_cmd').default;\n\t\t\tconfigCmd();\n\t\t\tbreak;\n\t\tcase 'init':\n\t\t\tinitCmd = require('./init_cmd').default;\n\t\t\tinitCmd(cwd, argv);\n\t\t\tbreak;\n\t\tcase 'link':\n\t\t\tlinkCmd = require('./link_cmd').default;\n\t\t\tlinkCmd(cwd, argv).subscribe();\n\t\t\tbreak;\n\t\tcase 'unlink':\n\t\t\tunlinkCmd = require('./unlink_cmd').default;\n\t\t\tunlinkCmd(cwd, argv).subscribe();\n\t\t\tbreak;\n\t\tcase 'cache':\n\t\t\tcacheCmd = require('./cache_cmd').default;\n\t\t\tcacheCmd(cwd, argv);\n\t\t\tbreak;\n\t\tcase 'version':\n\t\t\tversionCmd = require('./version_cmd').default;\n\t\t\tversionCmd().subscribe();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\thelpCmd = require('./help_cmd').default;\n\t\t\thelpCmd().subscribe();\n\t}\n})();","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/config.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.httpOptions = exports.bearerToken = exports.shFlag = exports.sh = exports.retries = exports.proxy = exports.globalBin = exports.globalNodeModules = exports.cacheDir = exports.registry = exports.home = exports.isWindows = undefined;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _process = process,\n    env = _process.env,\n    platform = _process.platform,\n    execPath = _process.execPath;\n\n/**\n * boolean value indicating whether or not we're running on `win32` (Windows).\n * @type {Boolean}\n */\n\nvar isWindows = exports.isWindows = platform === 'win32';\n\n/**\n * absolute location of the user's home directory.\n * @type {String}\n */\nvar home = exports.home = env[isWindows ? 'USERPROFILE' : 'HOME'];\n\n/**\n * registry endpoint configured via `IED_REGISTRY`, defaults to the npm\n * registry [`https://registry.npmjs.org/`]('https://registry.npmjs.org/').\n * @type {String}\n */\nvar registry = exports.registry = env.IED_REGISTRY || 'https://registry.npmjs.org/';\n\n/**\n * cache directory used for storing downloaded package tarballs. configurable\n * via `IED_CACHE_DIR`, default to `.ied_cache` in the user's home directory.\n * @type {String}\n */\nvar cacheDir = exports.cacheDir = env.IED_CACHE_DIR || _path2.default.join(home, '.ied_cache');\n\n/**\n * directory used for globally installed `node_modules`.\n * configurable via `IED_GLOBAL_NODE_MODULES`, default to `.node_modules` in\n * the user's home directory.\n * @type {String}\n */\nvar globalNodeModules = exports.globalNodeModules = env.IED_GLOBAL_NODE_MODULES || _path2.default.join(home, '.node_modules');\n\n/**\n * similar to {@link globalNodeModules}. directory used for symlinks of\n * globally linked executables.\n * configurable via `IED_GLOBAL_BIN`, default to parent of `process.execPath`\n * (location of `node` binary).\n * @type {String}\n */\nvar globalBin = exports.globalBin = env.IED_GLOBAL_BIN || _path2.default.resolve(execPath, '..');\n\n/**\n * proxy server endpoint. can be set via `IED_PROXY` or `http_proxy`. optional\n * and default to `null`.\n * @type {String|null}\n */\nvar proxy = exports.proxy = env.IED_PROXY || env.http_proxy || null;\n\n/**\n * how often `ied` should retry HTTP requests before indicating failure.\n * defaults to `5` requests. can be set via `IED_REQUEST_RETRIES`.\n * @type {Number}\n */\nvar retries = exports.retries = parseInt(env.IED_REQUEST_RETRIES, 10) || 5;\n\n/**\n * shell command used for executing lifecycle scripts (such as `postinstall`).\n * platform dependent: default to `cmd` on Windows, otherwise use `sh`.\n * can be overridden using `IED_SH`.\n * @type {String}\n */\nvar sh = exports.sh = env.IED_SH || env.SHELL || (platform === 'win32' ? env.comspec || 'cmd' : 'sh');\n\n/**\n * additional flags supplied to the `sh` executable. platform dependent:\n * default to `/d /s /c` on Windows, otherwise use `-c`.\n * can be overridden using `IED_SH_FLAG`.\n * @type {String}\n */\nvar shFlag = exports.shFlag = env.IED_SH_FLAG || (isWindows ? '/d /s /c' : '-c');\n\n/**\n * bearer token used for downloading access restricted packages (scoped\n * modules). this token will be set as `Authorization` header field on all\n * subsequent HTTP requests to the registry, thus exposing a potential\n * **security** risk.\n * @type {String|null}\n */\nvar bearerToken = exports.bearerToken = env.IED_BEARER_TOKEN || null;\n\n/**\n * HTTP options supplied as part of all subsequent requests. used for exporting\n * generic HTTP options that contain the proxy configuration (if set) and the\n * `Authorization` header.\n * @type {Object}\n */\nvar httpOptions = exports.httpOptions = {\n  proxy: proxy,\n  headers: bearerToken ? { authorization: 'Bearer ' + bearerToken } : {}\n};","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/help_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = helpCmd;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _util = require('./util');\n\nvar _do2 = require('rxjs/operator/do');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * print the `USAGE` document. can be invoked using `ied help` or implicitly as\n * a fall back.\n * @return {Observable} - observable sequence of `USAGE`.\n */\nfunction helpCmd() {\n  var _context;\n\n  var filename = _path2.default.join(__dirname, '../USAGE.txt');\n  return (_context = (0, _util.readFile)(filename, 'utf8'), _do2._do).call(_context, console.log);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/util.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.mkdirp = exports.forceSymlink = exports.unlink = exports.chmod = exports.readdir = exports.readlink = exports.rename = exports.stat = exports.writeFile = exports.readFile = undefined;\nexports.createObservableFactory = createObservableFactory;\nexports.httpGet = httpGet;\nexports.httpGetJSON = httpGetJSON;\nexports.entries = entries;\nexports.readFileJSON = readFileJSON;\nexports.setTitle = setTitle;\n\nvar _Observable = require('rxjs/Observable');\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _mkdirp2 = require('mkdirp');\n\nvar _mkdirp3 = _interopRequireDefault(_mkdirp2);\n\nvar _forceSymlink2 = require('force-symlink');\n\nvar _forceSymlink3 = _interopRequireDefault(_forceSymlink2);\n\nvar _needle = require('needle');\n\nvar _needle2 = _interopRequireDefault(_needle);\n\nvar _map = require('rxjs/operator/map');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * given an arbitrary asynchronous function that accepts a callback function,\n * wrap the outer asynchronous function into an observable sequence factory.\n * invoking the returned generated function is going to return a new **cold**\n * observable sequence.\n * @param  {Function} fn - function to be wrapped.\n * @param  {thisArg} [thisArg] - optional context.\n * @return {Function} - cold observable sequence factory.\n */\nfunction createObservableFactory(fn, thisArg) {\n\treturn function () {\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\treturn _Observable.Observable.create(function (observer) {\n\t\t\tfn.apply(thisArg, [].concat(args, [function (error) {\n\t\t\t\tfor (var _len2 = arguments.length, results = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t\t\t\t\tresults[_key2 - 1] = arguments[_key2];\n\t\t\t\t}\n\n\t\t\t\tif (error) {\n\t\t\t\t\tobserver.error(error);\n\t\t\t\t} else {\n\t\t\t\t\tresults.forEach(function (result) {\n\t\t\t\t\t\treturn observer.next(result);\n\t\t\t\t\t});\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}\n\t\t\t}]));\n\t\t});\n\t};\n}\n\n/**\n * send a GET request to the given HTTP endpoint by passing the supplied\n * arguments to [`needle`](https://www.npmjs.com/package/needle).\n * @return {Observable} - observable sequence of a single response object.\n */\nfunction httpGet() {\n\tfor (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t\targs[_key3] = arguments[_key3];\n\t}\n\n\treturn _Observable.Observable.create(function (observer) {\n\t\t_needle2.default.get.apply(_needle2.default, args.concat([function (error, response) {\n\t\t\tif (error) observer.error(error);else {\n\t\t\t\tobserver.next(response);\n\t\t\t\tobserver.complete();\n\t\t\t}\n\t\t}]));\n\t});\n}\n\n/**\n * GETs JSON documents from an HTTP endpoint.\n * @param  {String} url - endpoint to which the GET request should be made\n * @return {Object} An observable sequence of the fetched JSON document.\n */\nfunction httpGetJSON(url) {\n\treturn _Observable.Observable.create(function (observer) {\n\t\t_needle2.default.get(url, config.httpOptions, function (error, response) {\n\t\t\tif (error) observer.error(error);else {\n\t\t\t\tobserver.next(response.body);\n\t\t\t\tobserver.complete();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/** @type {Function} Observable wrapper function around `fs.readFile`. */\nvar readFile = exports.readFile = createObservableFactory(_fs2.default.readFile, _fs2.default);\n\n/** @type {Function} Observable wrapper function around `fs.writeFile`. */\nvar writeFile = exports.writeFile = createObservableFactory(_fs2.default.writeFile, _fs2.default);\n\n/** @type {Function} Observable wrapper function around `fs.stat`. */\nvar stat = exports.stat = createObservableFactory(_fs2.default.stat, _fs2.default);\n\n/** @type {Function} Observable wrapper function around `fs.rename`. */\nvar rename = exports.rename = createObservableFactory(_fs2.default.rename, _fs2.default);\n\n/** @type {Function} Observable wrapper function around `fs.readlink`. */\nvar readlink = exports.readlink = createObservableFactory(_fs2.default.readlink, _fs2.default);\n\n/** @type {Function} Observable wrapper function around `fs.readdir`. */\nvar readdir = exports.readdir = createObservableFactory(_fs2.default.readdir, _fs2.default);\n\n/** @type {Function} Observable wrapper function around `fs.chmod`. */\nvar chmod = exports.chmod = createObservableFactory(_fs2.default.chmod, _fs2.default);\n\n/** @type {Function} Observable wrapper function around `fs.unlink`. */\nvar unlink = exports.unlink = createObservableFactory(_fs2.default.unlink, _fs2.default);\n\n/** @type {Function} Observable wrapper function around\n[`force-symlink`](https://www.npmjs.org/package/force-symlink). */\nvar forceSymlink = exports.forceSymlink = createObservableFactory(_forceSymlink3.default);\n\n/** @type {Function} Observable wrapper function around\n[`mkdirp`](https://www.npmjs.com/package/mkdirp). */\nvar mkdirp = exports.mkdirp = createObservableFactory(_mkdirp3.default);\n\n/**\n * equivalent to `Map#entries` for observables, but operates on objects.\n * @return {Observable} - observable sequence of pairs.\n */\nfunction entries() {\n\treturn _mergeMap.mergeMap.call(this, function (object) {\n\t\tvar results = [];\n\t\tvar keys = Object.keys(object);\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar key = _step.value;\n\n\t\t\t\tresults.push([key, object[key]]);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t});\n}\n\n/**\n * read a UTF8 encoded JSON file from disk.\n * @param  {String} file - filename to be used.\n * @return {Observable} - observable sequence of a single object representing\n * the read JSON file.\n */\nfunction readFileJSON(file) {\n\tvar _context;\n\n\treturn (_context = readFile(file, 'utf8'), _map.map).call(_context, JSON.parse);\n}\n\n/**\n * set the terminal title using the required ANSI escape codes.\n * @param {String} title - title to be set.\n */\nfunction setTitle(title) {\n\tprocess.stdout.write(String.fromCharCode(27) + ']0;' + title + String.fromCharCode(7));\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/cache_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = cacheCmd;\n\nvar _rimraf = require('rimraf');\n\nvar _rimraf2 = _interopRequireDefault(_rimraf);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * print help if invoked without any further sub-command, empty the cache\n * directory (delete it) if invoked via `ied cache clean`.\n * @param  {String} cwd - current working directory.\n * @param  {Object} argv - parsed command line arguments.\n */\nfunction cacheCmd(cwd, argv) {\n\tswitch (argv._[1]) {\n\t\t// `ied cache clean`\n\t\tcase 'clean':\n\t\t\tvar shasum = argv._[2];\n\t\t\tif (shasum) {\n\t\t\t\t_rimraf2.default.sync(_path2.default.join(config.cacheDir, shasum));\n\t\t\t} else {\n\t\t\t\t_rimraf2.default.sync(config.cacheDir);\n\t\t\t}\n\t\t\tbreak;\n\t\t// `ied cache`\n\t\tdefault:\n\t\t\tvar helpCmd = require('./help_cmd').default;\n\t\t\thelpCmd(cwd, argv);\n\t}\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/cache.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.init = init;\nexports.getTmp = getTmp;\nexports.write = write;\nexports.read = read;\nexports.extract = extract;\n\nvar _Observable = require('rxjs/Observable');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _retryWhen = require('rxjs/operator/retryWhen');\n\nvar _gunzipMaybe = require('gunzip-maybe');\n\nvar _gunzipMaybe2 = _interopRequireDefault(_gunzipMaybe);\n\nvar _tarFs = require('tar-fs');\n\nvar _tarFs2 = _interopRequireDefault(_tarFs);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _nodeUuid = require('node-uuid');\n\nvar _nodeUuid2 = _interopRequireDefault(_nodeUuid);\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * initialize the cache.\n * @return {Observable} - observable sequence that will be completed once the\n * base directory of the cache has been created.\n */\nfunction init() {\n\treturn util.mkdirp(_path2.default.join(config.cacheDir, '.tmp'));\n}\n\n/**\n * get a random temporary filename.\n * @return {String} - temporary filename.\n */\nfunction getTmp() {\n\tvar filename = _path2.default.join(config.cacheDir, '.tmp', _nodeUuid2.default.v4());\n\treturn filename;\n}\n\n/**\n * open a write stream into a temporarily cached file for caching a new\n * package.\n * @return {WriteStream} - Write Stream\n */\nfunction write() {\n\treturn _fs2.default.createWriteStream(getTmp());\n}\n\n/**\n * open a read stream to a cached dependency.\n * @param  {String} id - id (unique identifier) of the cached tarball.\n * @return {ReadStream} - Read Stream\n */\nfunction read(id) {\n\tvar filename = _path2.default.join(config.cacheDir, id);\n\treturn _fs2.default.createReadStream(filename);\n}\n\n/**\n * extract a dependency from the cache.\n * @param {String} dest - pathname into which the cached dependency should be\n * extracted.\n * @param {String} id - id (unique identifier) of the cached tarball.\n * @return {Observable} - observable sequence that will be completed once\n * the cached dependency has been fetched.\n */\nfunction extract(dest, id) {\n\tvar _context,\n\t    _this = this;\n\n\treturn (_context = _Observable.Observable.create(function (observer) {\n\t\tvar tmpDest = getTmp();\n\t\tvar untar = _tarFs2.default.extract(tmpDest, { strip: 1 });\n\n\t\tvar completeHandler = function completeHandler() {\n\t\t\tobserver.next(tmpDest);\n\t\t\tobserver.complete();\n\t\t};\n\t\tvar errorHandler = function errorHandler(err) {\n\t\t\treturn observer.error(err);\n\t\t};\n\n\t\t_this.read(id).on('error', errorHandler).pipe((0, _gunzipMaybe2.default)()).on('error', errorHandler).pipe(untar).on('error', errorHandler).on('finish', completeHandler);\n\t}), _mergeMap.mergeMap).call(_context, function (tmpDest) {\n\t\tvar _context2;\n\n\t\treturn (_context2 = util.rename(tmpDest, dest), _retryWhen.retryWhen).call(_context2, function (errors) {\n\t\t\treturn _mergeMap.mergeMap.call(errors, function (error) {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn util.mkdirp(_path2.default.dirname(dest));\n\t\t\t});\n\t\t});\n\t});\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/config_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = configCmd;\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nvar _easyTable = require('easy-table');\n\nvar _easyTable2 = _interopRequireDefault(_easyTable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * print the used configuration object as an ASCII table.\n */\nfunction configCmd() {\n\tvar table = new _easyTable2.default();\n\tvar keys = Object.keys(config);\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar key = _step.value;\n\n\t\t\tvar value = config[key];\n\t\t\ttable.cell('key', key);\n\t\t\ttable.cell('value', value);\n\t\t\ttable.newRow();\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log(table.toString());\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/debuglog.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debugs = {}; // Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar debugEnv = void 0;\n\n/**\n * Node's `debuglog` function. Not available on older Node versions, therefore\n * copied in for convenience:\n *\n * This is used to create a function which conditionally writes to stderr based\n * on the existence of a `NODE_DEBUG` environment variable. If the `section`\n * name appears in that environment variable, then the returned function will\n * be similar to `console.error()`. If not, then the returned function is a\n * no-op.\n *\n * @param  {String} set - the section of the program to be debugged.\n * @return {Function} - the logging function.\n * @see https://nodejs.org/api/util.html#util_util_debuglog_section\n */\nfunction debuglog(set) {\n\tif (debugEnv === undefined) {\n\t\tdebugEnv = process.env.NODE_DEBUG || '';\n\t}\n\tvar upperSet = set.toUpperCase();\n\tif (!debugs[upperSet]) {\n\t\tif (debugEnv === '*' || new RegExp('\\\\b' + upperSet + '\\\\b', 'i').test(debugEnv)) {\n\t\t\t(function () {\n\t\t\t\tvar pid = process.pid;\n\t\t\t\tdebugs[upperSet] = function () {\n\t\t\t\t\tvar msg = _util2.default.format.apply(_util2.default, arguments);\n\t\t\t\t\tconsole.error('%s %d: %s', upperSet, pid, msg);\n\t\t\t\t};\n\t\t\t})();\n\t\t} else {\n\t\t\tdebugs[upperSet] = Function.prototype;\n\t\t}\n\t}\n\treturn debugs[upperSet];\n}\n\nexports.default = debuglog;","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/git.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.clone = clone;\nexports.extract = extract;\n\nvar _child_process = require('child_process');\n\nvar _Observable = require('rxjs/Observable');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _retryWhen = require('rxjs/operator/retryWhen');\n\nvar _cache = require('./cache');\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _debuglog = require('./debuglog');\n\nvar _debuglog2 = _interopRequireDefault(_debuglog);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar log = (0, _debuglog2.default)('git');\n\nfunction prefixGitArgs() {\n\treturn process.platform === 'win32' ? ['-c', 'core.longpaths=true'] : [];\n}\n\nfunction spawnGit(args) {\n\tlog('executing git with args ' + args);\n\tvar fullArgs = prefixGitArgs().concat(args || []);\n\treturn (0, _child_process.spawn)('git', fullArgs);\n}\n\n/**\n * clone a git repository.\n * @param {String} repo - git repository to clone.\n * @param {String} ref - git reference to checkout.\n * @return {Observable} - observable sequence that will be completed once\n * the git repository has been cloned.\n */\nfunction clone(repo, ref) {\n\treturn _Observable.Observable.create(function (observer) {\n\t\tvar tmpDest = (0, _cache.getTmp)();\n\n\t\tvar completeHandler = function completeHandler() {\n\t\t\tobserver.next(tmpDest);\n\t\t\tobserver.complete();\n\t\t};\n\t\tvar errorHandler = function errorHandler(err) {\n\t\t\tlog('failed to clone repository from ' + repo);\n\t\t\tobserver.error(err);\n\t\t};\n\t\tvar args = ['clone', '-b', ref, repo, tmpDest, '--single-branch'];\n\t\tlog('cloning git repository from ' + repo);\n\t\tvar git = spawnGit(args);\n\t\tgit.on('close', function (code) {\n\t\t\treturn code ? errorHandler() : completeHandler();\n\t\t});\n\t});\n}\n\n/**\n * extract a cloned git repository to destination.\n * @param {String} dest - pathname into which the cloned repository should be\n * extracted.\n * @return {Observable} - observable sequence that will be completed once\n * the cloned repository has been extracted.\n */\nfunction extract(dest) {\n\tvar _context;\n\n\tvar pkgJson = this.pkgJson,\n\t    target = this.target;\n\n\tvar tmpDest = pkgJson.dist.path;\n\tvar where = _path2.default.join(dest, target, 'package');\n\treturn (_context = util.rename(tmpDest, where), _retryWhen.retryWhen).call(_context, function (errors) {\n\t\treturn _mergeMap.mergeMap.call(errors, function (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\treturn util.mkdirp(_path2.default.dirname(dest));\n\t\t});\n\t});\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/init_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = initCmd;\n\nvar _initPackageJson = require('init-package-json');\n\nvar _initPackageJson2 = _interopRequireDefault(_initPackageJson);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * initialize a new `package.json` file.\n * @param  {String} cwd - current working directory.\n * @see https://www.npmjs.com/package/init-package-json\n */\nfunction initCmd(cwd) {\n\tvar initFile = _path2.default.resolve(config.home, '.ied-init');\n\n\t(0, _initPackageJson2.default)(cwd, initFile, function (err) {\n\t\tif (err) {\n\t\t\tif (err.message === 'canceled') {\n\t\t\t\tconsole.log('init canceled!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t});\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/install_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = installCmd;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _EmptyObservable = require('rxjs/observable/EmptyObservable');\n\nvar _concat = require('rxjs/operator/concat');\n\nvar _publishReplay = require('rxjs/operator/publishReplay');\n\nvar _skip = require('rxjs/operator/skip');\n\nvar _map = require('rxjs/operator/map');\n\nvar _merge = require('rxjs/operator/merge');\n\nvar _ignoreElements = require('rxjs/operator/ignoreElements');\n\nvar _install = require('./install');\n\nvar _cache = require('./cache');\n\nvar _pkg_json = require('./pkg_json');\n\nvar _build = require('./build');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * run the installation command.\n * @param  {String} cwd - current working directory (absolute path).\n * @param  {Object} argv - parsed command line arguments.\n * @return {Observable} - an observable sequence that will be completed once\n * the installation is complete.\n */\nfunction installCmd(cwd, argv) {\n\tvar _context;\n\n\tvar isExplicit = argv._.length - 1;\n\tvar updatedPkgJSONs = isExplicit ? (0, _pkg_json.fromArgv)(cwd, argv) : (0, _pkg_json.fromFs)(cwd);\n\tvar isProd = argv.production;\n\n\tvar nodeModules = _path2.default.join(cwd, 'node_modules');\n\n\tvar resolvedAll = (_context = (_context = (_context = _map.map.call(updatedPkgJSONs, function (pkgJson) {\n\t\treturn { pkgJson: pkgJson, target: '..', isProd: isProd };\n\t}), _install.resolveAll).call(_context, nodeModules, undefined, isExplicit), _skip.skip).call(_context, 1), _publishReplay.publishReplay).call(_context).refCount();\n\n\tvar initialized = (_context = (0, _cache.init)(), _ignoreElements.ignoreElements).call(_context);\n\tvar linkedAll = _install.linkAll.call(resolvedAll);\n\tvar fetchedAll = _install.fetchAll.call(resolvedAll, nodeModules);\n\tvar installedAll = (0, _merge.mergeStatic)(linkedAll, fetchedAll);\n\n\tvar builtAll = argv.build ? _build.buildAll.call(resolvedAll, nodeModules) : _EmptyObservable.EmptyObservable.create();\n\n\tvar saved = argv.save || argv['save-dev'] || argv['save-optional'] ? _pkg_json.save.call(updatedPkgJSONs, cwd) : _EmptyObservable.EmptyObservable.create();\n\n\treturn (0, _concat.concatStatic)(initialized, installedAll, saved, builtAll);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/install.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.LocalConflictError = exports.DEPENDENCY_FIELDS = exports.ENTRY_DEPENDENCY_FIELDS = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.resolveLocal = resolveLocal;\nexports.resolveRemote = resolveRemote;\nexports.resolveFromNpm = resolveFromNpm;\nexports.resolveFromTarball = resolveFromTarball;\nexports.resolveFromHosted = resolveFromHosted;\nexports.resolveFromGit = resolveFromGit;\nexports.resolve = resolve;\nexports.resolveAll = resolveAll;\nexports.linkAll = linkAll;\nexports.fetchAll = fetchAll;\n\nvar _crypto = require('crypto');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _ArrayObservable = require('rxjs/observable/ArrayObservable');\n\nvar _EmptyObservable = require('rxjs/observable/EmptyObservable');\n\nvar _Observable = require('rxjs/Observable');\n\nvar _finally2 = require('rxjs/operator/finally');\n\nvar _concat = require('rxjs/operator/concat');\n\nvar _distinctKey = require('rxjs/operator/distinctKey');\n\nvar _expand = require('rxjs/operator/expand');\n\nvar _map = require('rxjs/operator/map');\n\nvar _catch2 = require('rxjs/operator/catch');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _retry = require('rxjs/operator/retry');\n\nvar _skip = require('rxjs/operator/skip');\n\nvar _semver = require('semver');\n\nvar _needle = require('needle');\n\nvar _needle2 = _interopRequireDefault(_needle);\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _npmPackageArg = require('npm-package-arg');\n\nvar _npmPackageArg2 = _interopRequireDefault(_npmPackageArg);\n\nvar _lodash = require('lodash.memoize');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cache = require('./cache');\n\nvar cache = _interopRequireWildcard(_cache);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nvar _registry = require('./registry');\n\nvar registry = _interopRequireWildcard(_registry);\n\nvar _git = require('./git');\n\nvar git = _interopRequireWildcard(_git);\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nvar _progress = require('./progress');\n\nvar progress = _interopRequireWildcard(_progress);\n\nvar _pkg_json = require('./pkg_json');\n\nvar _debuglog = require('./debuglog');\n\nvar _debuglog2 = _interopRequireDefault(_debuglog);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar log = (0, _debuglog2.default)('install');\nvar cachedNpa = (0, _lodash2.default)(_npmPackageArg2.default);\n\n/**\n * properties of project-level `package.json` files that will be checked for\n * dependencies.\n * @type {Array.<String>}\n * @readonly\n */\nvar ENTRY_DEPENDENCY_FIELDS = exports.ENTRY_DEPENDENCY_FIELDS = ['dependencies', 'devDependencies', 'optionalDependencies'];\n\n/**\n * properties of `package.json` of sub-dependencies that will be checked for\n * dependences.\n * @type {Array.<String>}\n * @readonly\n */\nvar DEPENDENCY_FIELDS = exports.DEPENDENCY_FIELDS = ['dependencies', 'optionalDependencies'];\n\n/**\n * error class used for representing an error that occurs due to a lifecycle\n * script that exits with a non-zero status code.\n */\n\nvar LocalConflictError = exports.LocalConflictError = function (_Error) {\n\t_inherits(LocalConflictError, _Error);\n\n\t/**\n  * create instance.\n \t * @param\t{String} name - name of the dependency.\n \t * @param\t{String} version - local version.\n \t * @param\t{String} expected - expected version.\n  */\n\tfunction LocalConflictError(name, version, expected) {\n\t\t_classCallCheck(this, LocalConflictError);\n\n\t\tvar _this = _possibleConstructorReturn(this, (LocalConflictError.__proto__ || Object.getPrototypeOf(LocalConflictError)).call(this, 'Local version ' + name + '@' + version + ' does not match required version @' + expected));\n\n\t\t_this.name = 'LocalConflictError';\n\t\treturn _this;\n\t}\n\n\treturn LocalConflictError;\n}(Error);\n\n/**\n * resolve a dependency's `package.json` file from the local file system.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{String} parentTarget - relative parent's node_modules path.\n * @param\t{String} name - name of the dependency.\n * @param\t{String} version - version of the dependency.\n * @param\t{Boolean} isExplicit - whether the install command asks for an explicit install.\n * @return {Observable} - observable sequence of `package.json` objects.\n */\n\n\nfunction resolveLocal(nodeModules, parentTarget, name, version, isExplicit) {\n\tvar _context2;\n\n\tvar linkname = _path2.default.join(nodeModules, parentTarget, 'node_modules', name);\n\tvar mockFetch = function mockFetch() {\n\t\treturn _EmptyObservable.EmptyObservable.create();\n\t};\n\tlog('resolving ' + linkname + ' from node_modules');\n\n\t// support `file:` with symlinks\n\tif (version.substr(0, 5) === 'file:') {\n\t\tvar _context;\n\n\t\tlog('resolved ' + name + '@' + version + ' as local symlink');\n\t\tvar isScoped = name.charAt(0) === '@';\n\t\tvar src = _path2.default.join(parentTarget, isScoped ? '..' : '', version.substr(5));\n\t\tvar dst = _path2.default.join('node_modules', parentTarget, 'node_modules', name);\n\t\treturn (_context = util.forceSymlink(src, dst), _finally2._finally).call(_context, progress.complete);\n\t}\n\n\treturn (_context2 = util.readlink(linkname), _mergeMap.mergeMap).call(_context2, function (rel) {\n\t\tvar _context3;\n\n\t\tvar target = _path2.default.basename(_path2.default.dirname(rel));\n\t\tvar filename = _path2.default.join(linkname, 'package.json');\n\t\tlog('reading package.json from ' + filename);\n\n\t\treturn (_context3 = util.readFileJSON(filename), _map.map).call(_context3, function (pkgJson) {\n\t\t\tif (isExplicit && !(0, _semver.satisfies)(pkgJson.version, version)) {\n\t\t\t\tthrow new LocalConflictError(name, pkgJson.version, version);\n\t\t\t}\n\t\t\treturn { parentTarget: parentTarget, pkgJson: pkgJson, target: target, name: name, fetch: mockFetch };\n\t\t});\n\t});\n}\n\n/**\n * resolve a dependency's `package.json` file from a remote registry.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{String} parentTarget - relative parent's node_modules path.\n * @param\t{String} name - name of the dependency.\n * @param\t{String} version - version of the dependency.\n * @return {Observable} - observable sequence of `package.json` objects.\n */\nfunction resolveRemote(nodeModules, parentTarget, name, version) {\n\tvar source = name + '@' + version;\n\tlog('resolving ' + source + ' from remote registry');\n\n\tvar parsedSpec = cachedNpa(source);\n\n\tswitch (parsedSpec.type) {\n\t\tcase 'range':\n\t\tcase 'version':\n\t\tcase 'tag':\n\t\t\treturn resolveFromNpm(nodeModules, parentTarget, parsedSpec);\n\t\tcase 'remote':\n\t\t\treturn resolveFromTarball(nodeModules, parentTarget, parsedSpec);\n\t\tcase 'hosted':\n\t\t\treturn resolveFromHosted(nodeModules, parentTarget, parsedSpec);\n\t\tcase 'git':\n\t\t\treturn resolveFromGit(nodeModules, parentTarget, parsedSpec);\n\t\tdefault:\n\t\t\tthrow new Error('Unknown package spec: ' + parsedSpec.type + ' for ' + name);\n\t}\n}\n\n/**\n * resolve a dependency's `package.json` file from the npm registry.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{String} parentTarget - relative parent's node_modules path.\n * @param\t{Object} parsedSpec - parsed package name and specifier.\n * @return {Observable} - observable sequence of `package.json` objects.\n */\nfunction resolveFromNpm(nodeModules, parentTarget, parsedSpec) {\n\tvar _context4;\n\n\tvar raw = parsedSpec.raw,\n\t    name = parsedSpec.name,\n\t    type = parsedSpec.type,\n\t    spec = parsedSpec.spec;\n\n\tlog('resolving ' + raw + ' from npm');\n\tvar options = _extends({}, config.httpOptions, { retries: config.retries });\n\treturn (_context4 = registry.match(name, spec, options), _map.map).call(_context4, function (pkgJson) {\n\t\tvar target = pkgJson.dist.shasum;\n\t\tlog('resolved ' + raw + ' to tarball shasum ' + target + ' from npm');\n\t\treturn { parentTarget: parentTarget, pkgJson: pkgJson, target: target, name: name, type: type, fetch: fetch };\n\t});\n}\n\n/**\n * resolve a dependency's `package.json` file from an url tarball.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{String} parentTarget - relative parent's node_modules path.\n * @param\t{Object} parsedSpec - parsed package name and specifier.\n * @return {Observable} - observable sequence of `package.json` objects.\n */\nfunction resolveFromTarball(nodeModules, parentTarget, parsedSpec) {\n\tvar raw = parsedSpec.raw,\n\t    name = parsedSpec.name,\n\t    type = parsedSpec.type,\n\t    spec = parsedSpec.spec;\n\n\tlog('resolving ' + raw + ' from tarball');\n\treturn _Observable.Observable.create(function (observer) {\n\t\t// create shasum from url for storage\n\t\tvar hash = _crypto2.default.createHash('sha1');\n\t\thash.update(raw);\n\t\tvar shasum = hash.digest('hex');\n\t\tvar pkgJson = { name: name, dist: { tarball: spec, shasum: shasum } };\n\t\tlog('resolved ' + raw + ' to uri shasum ' + shasum + ' from tarball');\n\t\tobserver.next({ parentTarget: parentTarget, pkgJson: pkgJson, target: shasum, name: name, type: type, fetch: fetch });\n\t\tobserver.complete();\n\t});\n}\n\n/**\n * resolve a dependency's `package.json` file from an hosted GitHub-like registry.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{String} parentTarget - relative parent's node_modules path.\n * @param\t{Object} parsedSpec - parsed package name and specifier.\n * @return {Observable} - observable sequence of `package.json` objects.\n */\nfunction resolveFromHosted(nodeModules, parentTarget, parsedSpec) {\n\tvar _context5;\n\n\tvar raw = parsedSpec.raw,\n\t    name = parsedSpec.name,\n\t    type = parsedSpec.type,\n\t    hosted = parsedSpec.hosted;\n\n\tlog('resolving ' + raw + ' from ' + hosted.type);\n\n\tvar _hosted$shortcut$spli = hosted.shortcut.split(':'),\n\t    _hosted$shortcut$spli2 = _slicedToArray(_hosted$shortcut$spli, 2),\n\t    provider = _hosted$shortcut$spli2[0],\n\t    shortcut = _hosted$shortcut$spli2[1];\n\n\tvar _shortcut$split = shortcut.split('#'),\n\t    _shortcut$split2 = _slicedToArray(_shortcut$split, 2),\n\t    repo = _shortcut$split2[0],\n\t    _shortcut$split2$ = _shortcut$split2[1],\n\t    ref = _shortcut$split2$ === undefined ? 'master' : _shortcut$split2$;\n\n\tvar options = _extends({}, config.httpOptions, { retries: config.retries });\n\t// create shasum from directUrl for storage\n\tvar hash = _crypto2.default.createHash('sha1');\n\thash.update(hosted.directUrl);\n\tvar shasum = hash.digest('hex');\n\n\tvar tarball = void 0;\n\tswitch (hosted.type) {\n\t\tcase 'github':\n\t\t\ttarball = _url2.default.resolve('https://codeload.github.com', repo + '/tar.gz/' + ref);\n\t\t\tbreak;\n\t\tcase 'bitbucket':\n\t\t\ttarball = _url2.default.resolve('https://bitbucket.org', repo + '/get/' + ref + '.tar.gz');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Unknown hosted type: ' + hosted.type + ' for ' + name);\n\t}\n\n\treturn (_context5 = (_context5 = registry.fetch(hosted.directUrl, options), _map.map).call(_context5, function (_ref) {\n\t\tvar body = _ref.body;\n\t\treturn JSON.parse(body);\n\t}), _map.map).call(_context5, function (pkgJson) {\n\t\tpkgJson.dist = { tarball: tarball, shasum: shasum }; // eslint-disable-line no-param-reassign\n\t\tlog('resolved ' + name + '@' + ref + ' to directUrl shasum ' + shasum + ' from ' + provider);\n\t\treturn { parentTarget: parentTarget, pkgJson: pkgJson, target: shasum, name: pkgJson.name, type: type, fetch: fetch };\n\t});\n}\n\n/**\n * resolve a dependency's `package.json` file from a git endpoint.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{String} parentTarget - relative parent's node_modules path.\n * @param\t{Object} parsedSpec - parsed package name and specifier.\n * @return {Observable} - observable sequence of `package.json` objects.\n */\nfunction resolveFromGit(nodeModules, parentTarget, parsedSpec) {\n\tvar _context6;\n\n\tvar raw = parsedSpec.raw,\n\t    type = parsedSpec.type,\n\t    spec = parsedSpec.spec;\n\n\tlog('resolving ' + raw + ' from git');\n\n\tvar _spec$split = spec.split('://'),\n\t    _spec$split2 = _slicedToArray(_spec$split, 2),\n\t    protocol = _spec$split2[0],\n\t    host = _spec$split2[1];\n\n\tvar _host$split = host.split('#'),\n\t    _host$split2 = _slicedToArray(_host$split, 2),\n\t    repo = _host$split2[0],\n\t    _host$split2$ = _host$split2[1],\n\t    ref = _host$split2$ === undefined ? 'master' : _host$split2$;\n\n\t// create shasum from spec for storage\n\n\n\tvar hash = _crypto2.default.createHash('sha1');\n\thash.update(spec);\n\tvar shasum = hash.digest('hex');\n\tvar repoPath = void 0;\n\n\treturn (_context6 = (_context6 = git.clone(repo, ref), _mergeMap.mergeMap).call(_context6, function (tmpDest) {\n\t\trepoPath = tmpDest;\n\t\treturn util.readFileJSON(_path2.default.resolve(tmpDest, 'package.json'));\n\t}), _map.map).call(_context6, function (pkgJson) {\n\t\tvar name = pkgJson.name;\n\t\tpkgJson.dist = { shasum: shasum, path: repoPath }; // eslint-disable-line no-param-reassign\n\t\tlog('resolved ' + name + '@' + ref + ' to spec shasum ' + shasum + ' from git');\n\t\treturn { parentTarget: parentTarget, pkgJson: pkgJson, target: shasum, name: name, type: type, fetch: git.extract };\n\t});\n}\n\n/**\n * resolve an individual sub-dependency based on the parent's target and the\n * current working directory.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{String} parentTarget - target path used for determining the sub-\n * dependency's path.\n * @param\t{Boolean} isExplicit - whether the install command asks for an explicit install.\n * @return {Obserable} - observable sequence of `package.json` root documents\n * wrapped into dependency objects representing the resolved sub-dependency.\n */\nfunction resolve(nodeModules, parentTarget, isExplicit) {\n\treturn _mergeMap.mergeMap.call(this, function (_ref2) {\n\t\tvar _context7;\n\n\t\tvar _ref3 = _slicedToArray(_ref2, 2),\n\t\t    name = _ref3[0],\n\t\t    version = _ref3[1];\n\n\t\tprogress.add();\n\t\tprogress.report('resolving ' + name + '@' + version);\n\t\tlog('resolving ' + name + '@' + version);\n\n\t\treturn (_context7 = (_context7 = resolveLocal(nodeModules, parentTarget, name, version, isExplicit), _catch2._catch).call(_context7, function (error) {\n\t\t\tif (error.name !== 'LocalConflictError' && error.code !== 'ENOENT') {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tlog('failed to resolve ' + name + '@' + version + ' from local ' + parentTarget + ' via ' + nodeModules);\n\t\t\treturn resolveRemote(nodeModules, parentTarget, name, version, isExplicit);\n\t\t}), _finally2._finally).call(_context7, progress.complete);\n\t});\n}\n\n/**\n * resolve all dependencies starting at the current working directory.\n * @param\t{String} nodeModules - `node_modules` base directory.\n * @param\t{Object} [targets=Object.create(null)] - resolved / active targets.\n * @param\t{Boolean} isExplicit - whether the install command asks for an explicit install.\n * @return {Observable} - an observable sequence of resolved dependencies.\n */\nfunction resolveAll(nodeModules) {\n\tvar targets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.create(null);\n\tvar isExplicit = arguments[2];\n\n\treturn _expand.expand.call(this, function (_ref4) {\n\t\tvar _context8;\n\n\t\tvar target = _ref4.target,\n\t\t    pkgJson = _ref4.pkgJson,\n\t\t    _ref4$isProd = _ref4.isProd,\n\t\t    isProd = _ref4$isProd === undefined ? false : _ref4$isProd;\n\n\t\t// cancel when we get into a circular dependency\n\t\tif (target in targets) {\n\t\t\tlog('aborting due to circular dependency ' + target);\n\t\t\treturn _EmptyObservable.EmptyObservable.create();\n\t\t}\n\n\t\ttargets[target] = true; // eslint-disable-line no-param-reassign\n\n\t\t// install devDependencies of entry dependency (project-level)\n\t\tvar fields = target === '..' && !isProd ? ENTRY_DEPENDENCY_FIELDS : DEPENDENCY_FIELDS;\n\n\t\tlog('extracting ' + fields + ' from ' + target);\n\n\t\tvar dependencies = (0, _pkg_json.parseDependencies)(pkgJson, fields);\n\n\t\treturn (_context8 = _ArrayObservable.ArrayObservable.create(dependencies), resolve).call(_context8, nodeModules, target, isExplicit);\n\t});\n}\n\nfunction resolveSymlink(src, dst) {\n\tvar relSrc = _path2.default.relative(_path2.default.dirname(dst), src);\n\treturn [relSrc, dst];\n}\n\nfunction getBinLinks(dep) {\n\tvar pkgJson = dep.pkgJson,\n\t    parentTarget = dep.parentTarget,\n\t    target = dep.target;\n\n\tvar binLinks = [];\n\tvar bin = (0, _pkg_json.normalizeBin)(pkgJson);\n\tvar names = Object.keys(bin);\n\tfor (var i = 0; i < names.length; i++) {\n\t\tvar name = names[i];\n\t\tvar src = _path2.default.join('node_modules', target, 'package', bin[name]);\n\t\tvar dst = _path2.default.join('node_modules', parentTarget, 'node_modules', '.bin', name);\n\t\tbinLinks.push([src, dst]);\n\t}\n\treturn binLinks;\n}\n\nfunction getDirectLink(dep) {\n\tvar parentTarget = dep.parentTarget,\n\t    target = dep.target,\n\t    name = dep.name;\n\n\tvar src = _path2.default.join('node_modules', target, 'package');\n\tvar dst = _path2.default.join('node_modules', parentTarget, 'node_modules', name);\n\treturn [src, dst];\n}\n\n/**\n * symlink the intermediate results of the underlying observable sequence\n * @return {Observable} - empty observable sequence that will be completed\n * once all dependencies have been symlinked.\n */\nfunction linkAll() {\n\tvar _context9;\n\n\treturn (_context9 = (_context9 = _mergeMap.mergeMap.call(this, function (dep) {\n\t\treturn [getDirectLink(dep)].concat(_toConsumableArray(getBinLinks(dep)));\n\t}), _map.map).call(_context9, function (_ref5) {\n\t\tvar _ref6 = _slicedToArray(_ref5, 2),\n\t\t    src = _ref6[0],\n\t\t    dst = _ref6[1];\n\n\t\treturn resolveSymlink(src, dst);\n\t}), _mergeMap.mergeMap).call(_context9, function (_ref7) {\n\t\tvar _ref8 = _slicedToArray(_ref7, 2),\n\t\t    src = _ref8[0],\n\t\t    dst = _ref8[1];\n\n\t\tlog('symlinking ' + src + ' -> ' + dst);\n\t\treturn util.forceSymlink(src, dst);\n\t});\n}\n\nfunction checkShasum(shasum, expected, tarball) {\n\t_assert2.default.equal(shasum, expected, 'shasum mismatch for ' + tarball + ': ' + shasum + ' <-> ' + expected);\n}\n\nfunction download(tarball, expected, type) {\n\tvar _context10;\n\n\tlog('downloading ' + tarball + ', expecting ' + expected);\n\treturn (_context10 = _Observable.Observable.create(function (observer) {\n\t\tvar shasum = _crypto2.default.createHash('sha1');\n\t\tvar response = _needle2.default.get(tarball, config.httpOptions);\n\t\tvar cached = response.pipe(cache.write());\n\n\t\tvar errorHandler = function errorHandler(error) {\n\t\t\treturn observer.error(error);\n\t\t};\n\t\tvar dataHandler = function dataHandler(chunk) {\n\t\t\treturn shasum.update(chunk);\n\t\t};\n\t\tvar finishHandler = function finishHandler() {\n\t\t\tvar actualShasum = shasum.digest('hex');\n\t\t\tlog('downloaded ' + actualShasum + ' into ' + cached.path);\n\t\t\t// only actually check shasum integrity for npm tarballs\n\t\t\tvar expectedShasum = ['range', 'version', 'tag'].indexOf(type) !== -1 ? actualShasum : expected;\n\t\t\tobserver.next({ tmpPath: cached.path, shasum: expectedShasum });\n\t\t\tobserver.complete();\n\t\t};\n\n\t\tresponse.on('data', dataHandler);\n\t\tresponse.on('error', errorHandler);\n\n\t\tcached.on('error', errorHandler);\n\t\tcached.on('finish', finishHandler);\n\t}), _mergeMap.mergeMap).call(_context10, function (_ref9) {\n\t\tvar tmpPath = _ref9.tmpPath,\n\t\t    shasum = _ref9.shasum;\n\n\t\tif (expected) {\n\t\t\tcheckShasum(shasum, expected, tarball);\n\t\t}\n\n\t\tvar newPath = _path2.default.join(config.cacheDir, shasum);\n\t\treturn util.rename(tmpPath, newPath);\n\t});\n}\n\nfunction fixPermissions(target, bin) {\n\tvar _context11;\n\n\tvar execMode = 511 & ~process.umask();\n\tvar paths = [];\n\tvar names = Object.keys(bin);\n\tfor (var i = 0; i < names.length; i++) {\n\t\tvar name = names[i];\n\t\tpaths.push(_path2.default.resolve(target, bin[name]));\n\t}\n\tlog('fixing persmissions of ' + names + ' in ' + target);\n\treturn (_context11 = _ArrayObservable.ArrayObservable.create(paths), _mergeMap.mergeMap).call(_context11, function (filepath) {\n\t\treturn util.chmod(filepath, execMode);\n\t});\n}\n\nfunction fetch(nodeModules) {\n\tvar _context12;\n\n\tvar target = this.target,\n\t    type = this.type,\n\t    _pkgJson = this.pkgJson,\n\t    name = _pkgJson.name,\n\t    bin = _pkgJson.bin,\n\t    _pkgJson$dist = _pkgJson.dist,\n\t    tarball = _pkgJson$dist.tarball,\n\t    shasum = _pkgJson$dist.shasum;\n\n\tvar where = _path2.default.join(nodeModules, target, 'package');\n\n\tlog('fetching ' + tarball + ' into ' + where);\n\n\treturn (_context12 = (_context12 = util.stat(where), _skip.skip).call(_context12, 1), _catch2._catch).call(_context12, function (error) {\n\t\tvar _context13;\n\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t\tvar extracted = (_context13 = cache.extract(where, shasum), _catch2._catch).call(_context13, function (error) {\n\t\t\t// eslint-disable-line\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\treturn (0, _concat.concatStatic)(download(tarball, shasum, type), cache.extract(where, shasum));\n\t\t});\n\t\tvar fixedPermissions = fixPermissions(where, (0, _pkg_json.normalizeBin)({ name: name, bin: bin }));\n\t\treturn (0, _concat.concatStatic)(extracted, fixedPermissions);\n\t});\n}\n\nfunction fetchAll(nodeModules) {\n\tvar _context15;\n\n\tvar fetchWithRetry = function fetchWithRetry(dep) {\n\t\tvar _context14;\n\n\t\treturn (_context14 = dep.fetch(nodeModules), _retry.retry).call(_context14, config.retries);\n\t};\n\treturn (_context15 = _distinctKey.distinctKey.call(this, 'target'), _mergeMap.mergeMap).call(_context15, fetchWithRetry);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/registry.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requests = exports.DEFAULT_RETRIES = exports.DEFAULT_REGISTRY = undefined;\nexports.reset = reset;\nexports.checkStatus = checkStatus;\nexports.escapeName = escapeName;\nexports.fetch = fetch;\nexports.match = match;\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _map = require('rxjs/operator/map');\n\nvar _do2 = require('rxjs/operator/do');\n\nvar _retry = require('rxjs/operator/retry');\n\nvar _publishReplay = require('rxjs/operator/publishReplay');\n\nvar _util = require('./util');\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/**\n * default registry URL to be used. can be overridden via options on relevant\n * functions.\n * @type {String}\n */\nvar DEFAULT_REGISTRY = exports.DEFAULT_REGISTRY = 'https://registry.npmjs.org/';\n\n/**\n * default number of retries to attempt before failing to resolve to a package\n * @type {Number}\n */\nvar DEFAULT_RETRIES = exports.DEFAULT_RETRIES = 5;\n\n/**\n * register of pending and completed HTTP requests mapped to their respective\n * observable sequences.\n * @type {Object}\n */\nvar requests = exports.requests = Object.create(null);\n\n/**\n * clear the internal cache used for pending and completed HTTP requests.\n */\nfunction reset() {\n  var uris = Object.keys(requests);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = uris[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var uri = _step.value;\n\n      delete requests[uri];\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\n/**\n * ensure that the registry responded with an accepted HTTP status code\n * (`200`).\n * @param  {String} uri - URI used for retrieving the supplied response.\n * @param  {Number} resp - HTTP response object.\n * @throws {assert.AssertionError} if the status code is not 200.\n */\nfunction checkStatus(uri, resp) {\n  var statusCode = resp.statusCode,\n      error = resp.body.error;\n\n  _assert2.default.equal(statusCode, 200, 'error status code ' + uri + ': ' + error);\n}\n\n/**\n * escape the given package name, which can then be used as part of the package\n * root URL.\n * @param  {String} name - package name.\n * @return {String} - escaped package name.\n */\nfunction escapeName(name) {\n  var isScoped = name.charAt(0) === '@';\n  var escapedName = isScoped ? '@' + encodeURIComponent(name.substr(1)) : encodeURIComponent(name);\n  return escapedName;\n}\n\n/**\n * HTTP GET the resource at the supplied URI. if a request to the same URI has\n * already been made, return the cached (pending) request.\n * @param  {String} uri - endpoint to fetch data from.\n * @param  {Object} [options = {}] - optional HTTP and `retries` options.\n * @return {Observable} - observable sequence of pending / completed request.\n */\nfunction fetch(uri) {\n  var _context;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _options$retries = options.retries,\n      retries = _options$retries === undefined ? DEFAULT_RETRIES : _options$retries,\n      needleOptions = _objectWithoutProperties(options, ['retries']);\n\n  var existingRequest = requests[uri];\n\n  if (existingRequest) {\n    return existingRequest;\n  }\n  var newRequest = (_context = (_context = (_context = (0, _util.httpGet)(uri, needleOptions), _do2._do).call(_context, function (resp) {\n    return checkStatus(uri, resp);\n  }), _retry.retry).call(_context, retries), _publishReplay.publishReplay).call(_context).refCount();\n  requests[uri] = newRequest;\n  return newRequest;\n}\n\n/**\n * resolve a package defined via an ambiguous semantic version string to a\n * specific `package.json` file.\n * @param {String} name - package name.\n * @param {String} version - semantic version string or tag name.\n * @param {Object} options - HTTP request options.\n * @return {Observable} - observable sequence of the `package.json` file.\n */\nfunction match(name, version) {\n  var _context2;\n\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var escapedName = escapeName(name);\n\n  var _options$registry = options.registry,\n      registry = _options$registry === undefined ? DEFAULT_REGISTRY : _options$registry,\n      fetchOptions = _objectWithoutProperties(options, ['registry']);\n\n  var uri = _url2.default.resolve(registry, escapedName + '/' + version);\n  return (_context2 = fetch(uri, fetchOptions), _map.map).call(_context2, function (_ref) {\n    var body = _ref.body;\n    return body;\n  });\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/progress.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.complete = complete;\nexports.report = report;\n\nvar _ora = require('ora');\n\nvar _ora2 = _interopRequireDefault(_ora);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar spinner = (0, _ora2.default)({\n  spinner: 'clock'\n});\n\nvar completed = 0;\nvar added = 0;\nvar status = '';\n\n// start the spinner on startup\nspinner.start();\n\n/**\n * add one or more scheduled tasks.\n * @param {Number} [n=1] - number of scheduled tasks.\n */\nfunction add() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  added += n;\n  report();\n}\n\n/**\n * complete a previously scheduled task. stop the spinner when there are no\n * outstanding tasks.\n * @param  {Number} [n=1] - number of tasks that have been completed.\n */\nfunction complete() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  completed += n;\n  if (added === completed) spinner.stop();else report();\n}\n\n/**\n * log the progress by updating the status message, percentage and spinner.\n * @param  {String} [_status] - optional (updated) status message. defaults to\n * the previous status message.\n * @see https://www.npmjs.org/package/ora\n */\nfunction report() {\n  var _status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : status;\n\n  status = _status;\n  var progress = Math.round(completed / added * 100 * 100) / 100;\n  spinner.text = progress + '% ' + status;\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/pkg_json.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.mergeDependencies = mergeDependencies;\nexports.parseBundleDependencies = parseBundleDependencies;\nexports.parseDependencies = parseDependencies;\nexports.normalizeBin = normalizeBin;\nexports.fromFs = fromFs;\nexports.updatePkgJson = updatePkgJson;\nexports.save = save;\nexports.fromArgv = fromArgv;\nexports.parseArgv = parseArgv;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _ScalarObservable = require('rxjs/observable/ScalarObservable');\n\nvar _lodash = require('lodash.frompairs');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = require('rxjs/operator/map');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _catch2 = require('rxjs/operator/catch');\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * merge dependency fields.\n * @param  {Object} pkgJson - `package.json` object from which the dependencies\n * should be obtained.\n * @param  {Array.<String>} fields - property names of dependencies to be merged\n * together.\n * @return {Object} - merged dependencies.\n */\nfunction mergeDependencies(pkgJson, fields) {\n\tvar allDependencies = {};\n\tfor (var i = 0; i < fields.length; i++) {\n\t\tvar field = fields[i];\n\t\tvar dependencies = pkgJson[field] || {};\n\t\tvar names = Object.keys(dependencies);\n\t\tfor (var j = 0; j < names.length; j++) {\n\t\t\tvar name = names[j];\n\t\t\tallDependencies[name] = dependencies[name];\n\t\t}\n\t}\n\treturn allDependencies;\n}\n\n/**\n * extract an array of bundled dependency names from the passed in\n * `package.json`. uses the `bundleDependencies` and `bundledDependencies`\n * properties.\n * @param  {Object} pkgJson - plain JavaScript object representing a\n * `package.json` file.\n * @return {Array.<String>} - array of bundled dependency names.\n */\nfunction parseBundleDependencies(pkgJson) {\n\tvar bundleDependencies = [].concat(pkgJson.bundleDependencies || []).concat(pkgJson.bundledDependencies || []);\n\treturn bundleDependencies;\n}\n\n/**\n * extract specified dependencies from a specific `package.json`.\n * @param  {Object} pkgJson - plain JavaScript object representing a\n * `package.json` file.\n * @param  {Array.<String>} fields - array of dependency fields to be followed.\n * @return {Array} - array of dependency pairs.\n */\nfunction parseDependencies(pkgJson, fields) {\n\t// bundleDependencies and bundledDependencies are optional. we need to\n\t// exclude those form the final [name, version] pairs that we're\n\t// generating.\n\tvar bundleDependencies = parseBundleDependencies(pkgJson);\n\tvar allDependencies = mergeDependencies(pkgJson, fields);\n\tvar names = Object.keys(allDependencies);\n\tvar results = [];\n\tfor (var i = 0; i < names.length; i++) {\n\t\tvar name = names[i];\n\t\tif (bundleDependencies.indexOf(name) === -1) {\n\t\t\tresults.push([name, allDependencies[name]]);\n\t\t}\n\t}\n\treturn results;\n}\n\n/**\n * normalize the `bin` property in `package.json`, which could either be a\n * string, object or undefined.\n * @param  {Object} pkgJson - plain JavaScript object representing a\n * `package.json` file.\n * @return {Object} - normalized `bin` property.\n */\nfunction normalizeBin(pkgJson) {\n\tswitch (_typeof(pkgJson.bin)) {\n\t\tcase 'string':\n\t\t\treturn _defineProperty({}, pkgJson.name, pkgJson.bin);\n\t\tcase 'object':\n\t\t\treturn pkgJson.bin;\n\t\tdefault:\n\t\t\treturn {};\n\t}\n}\n\n/**\n * create an instance by reading a `package.json` from disk.\n * @param  {String} baseDir - base directory of the project.\n * @return {Observabel} - an observable sequence of an `EntryDep`.\n */\nfunction fromFs(baseDir) {\n\tvar filename = _path2.default.join(baseDir, 'package.json');\n\treturn util.readFileJSON(filename);\n}\n\nfunction updatePkgJson(pkgJson, diff) {\n\tvar updatedPkgJson = _extends({}, pkgJson);\n\tvar fields = Object.keys(diff);\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar field = _step.value;\n\n\t\t\tupdatedPkgJson[field] = _extends({}, updatedPkgJson[field], diff[field]);\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn updatedPkgJson;\n}\n\nfunction save(baseDir) {\n\tvar _context;\n\n\tvar filename = _path2.default.join(baseDir, 'package.json');\n\n\treturn (_context = (_context = _mergeMap.mergeMap.call(this, function (diff) {\n\t\tvar _context2;\n\n\t\treturn (_context2 = (_context2 = fromFs(baseDir), _catch2._catch).call(_context2, function () {\n\t\t\treturn _ScalarObservable.ScalarObservable.create({});\n\t\t}), _map.map).call(_context2, function (pkgJson) {\n\t\t\treturn updatePkgJson(pkgJson, diff);\n\t\t});\n\t}), _map.map).call(_context, function (pkgJson) {\n\t\treturn JSON.stringify(pkgJson, null, '\\t');\n\t}), _mergeMap.mergeMap).call(_context, function (pkgJson) {\n\t\treturn util.writeFile(filename, pkgJson, 'utf8');\n\t});\n}\n\n/**\n * create an instance by parsing the explicit dependencies supplied via\n * command line arguments.\n * @param  {String} baseDir - base directory of the project.\n * @param  {Array} argv - command line arguments.\n * @return {Observabel} - an observable sequence of an `EntryDep`.\n */\nfunction fromArgv(baseDir, argv) {\n\tvar pkgJson = parseArgv(argv);\n\treturn _ScalarObservable.ScalarObservable.create(pkgJson);\n}\n\n/**\n * parse the command line arguments and create the dependency field of a\n * `package.json` file from it.\n * @param  {Array} argv - command line arguments.\n * @return {NullPkgJSON} - package.json created from explicit dependencies\n * supplied via command line arguments.\n */\nfunction parseArgv(argv) {\n\tvar names = argv._.slice(1);\n\n\tvar nameVersionPairs = (0, _lodash2.default)(names.map(function (target) {\n\t\tvar nameVersion = /^(@?.+?)(?:@(.+)?)?$/.exec(target);\n\t\treturn [nameVersion[1], nameVersion[2] || '*'];\n\t}));\n\n\tvar field = argv['save-dev'] ? 'devDependencies' : argv['save-optional'] ? 'optionalDependencies' : 'dependencies';\n\n\treturn _defineProperty({}, field, nameVersionPairs);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/build.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.FailedBuildError = exports.LIFECYCLE_SCRIPTS = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.build = build;\nexports.parseLifecycleScripts = parseLifecycleScripts;\nexports.buildAll = buildAll;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _ArrayObservable = require('rxjs/observable/ArrayObservable');\n\nvar _Observable = require('rxjs/Observable');\n\nvar _do2 = require('rxjs/operator/do');\n\nvar _map = require('rxjs/operator/map');\n\nvar _concatMap = require('rxjs/operator/concatMap');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _filter = require('rxjs/operator/filter');\n\nvar _every = require('rxjs/operator/every');\n\nvar _child_process = require('child_process');\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nvar _debuglog = require('./debuglog');\n\nvar _debuglog2 = _interopRequireDefault(_debuglog);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar log = (0, _debuglog2.default)('build');\n\n/**\n * names of lifecycle scripts that should be run as part of the installation\n * process of a specific package (= properties of `scripts` object in\n * `package.json`).\n * @type {Array.<String>}\n * @readonly\n */\nvar LIFECYCLE_SCRIPTS = exports.LIFECYCLE_SCRIPTS = ['preinstall', 'install', 'postinstall'];\n\n/**\n * error class used for representing an error that occurs due to a lifecycle\n * script that exits with a non-zero status code.\n */\n\nvar FailedBuildError = exports.FailedBuildError = function (_Error) {\n\t_inherits(FailedBuildError, _Error);\n\n\t/**\n  * create instance.\n  */\n\tfunction FailedBuildError() {\n\t\t_classCallCheck(this, FailedBuildError);\n\n\t\tvar _this = _possibleConstructorReturn(this, (FailedBuildError.__proto__ || Object.getPrototypeOf(FailedBuildError)).call(this, 'failed to build one or more dependencies that exited with != 0'));\n\n\t\t_this.name = FailedBuildError;\n\t\treturn _this;\n\t}\n\n\treturn FailedBuildError;\n}(Error);\n\n/**\n * build a dependency by executing the given lifecycle script.\n * @param  {String} nodeModules - absolute path of the `node_modules` directory.\n * @param  {Object} dep - dependency to be built.\n * @param  {String} dep.target - relative location of the target directory.\n * @param  {String} dep.script - script to be executed (usually using `sh`).\n * @return {Observable} - observable sequence of the returned exit code.\n */\n\n\nfunction build(nodeModules, dep) {\n\tvar target = dep.target,\n\t    script = dep.script;\n\n\tlog('executing \"' + script + '\" from ' + target);\n\n\treturn _Observable.Observable.create(function (observer) {\n\t\t// some packages do expect a defined `npm_execpath` env\n\t\t// eg. https://github.com/chrisa/node-dtrace-provider/blob/v0.6.0/scripts/install.js#L19\n\t\tvar env = _extends({ npm_execpath: '' }, process.env);\n\n\t\tenv.PATH = [_path2.default.join(nodeModules, target, 'node_modules', '.bin'), _path2.default.resolve(__dirname, '..', 'node_modules', '.bin'), process.env.PATH].join(_path2.default.delimiter);\n\n\t\tvar childProcess = (0, _child_process.spawn)(config.sh, [config.shFlag, script], {\n\t\t\tcwd: _path2.default.join(nodeModules, target, 'package'),\n\t\t\tenv: env,\n\t\t\tstdio: 'inherit'\n\t\t\t// shell: true // does break `dtrace-provider@0.6.0` build\n\t\t});\n\t\tchildProcess.on('error', function (error) {\n\t\t\tobserver.error(error);\n\t\t});\n\t\tchildProcess.on('close', function (code) {\n\t\t\tobserver.next(code);\n\t\t\tobserver.complete();\n\t\t});\n\t});\n}\n\n/**\n * extract lifecycle scripts from supplied dependency.\n * @param {Dep} dep - dependency to be parsed.\n * @return {Array.<Object>} - array of script targets to be executed.\n */\nfunction parseLifecycleScripts(_ref) {\n\tvar target = _ref.target,\n\t    _ref$pkgJson$scripts = _ref.pkgJson.scripts,\n\t    scripts = _ref$pkgJson$scripts === undefined ? {} : _ref$pkgJson$scripts;\n\n\tvar results = [];\n\tfor (var i = 0; i < LIFECYCLE_SCRIPTS.length; i++) {\n\t\tvar name = LIFECYCLE_SCRIPTS[i];\n\t\tvar script = scripts[name];\n\t\tif (script) results.push({ target: target, script: script });\n\t}\n\treturn results;\n}\n\n/**\n * run all lifecycle scripts upon completion of the installation process.\n * ensures that all scripts exit with 0 (success), otherwise an error will be\n * thrown.\n * @param  {String} nodeModules - `node_modules` base directory.\n * @return {Observable} - empty observable sequence that will be completed once\n * all lifecycle scripts have been executed.\n */\nfunction buildAll(nodeModules) {\n\tvar _context;\n\n\treturn (_context = (_context = (_context = (_context = (_context = _map.map.call(this, parseLifecycleScripts), _mergeMap.mergeMap).call(_context, function (scripts) {\n\t\treturn _ArrayObservable.ArrayObservable.create(scripts);\n\t}), _concatMap.concatMap).call(_context, function (script) {\n\t\treturn build(nodeModules, script);\n\t}), _every.every).call(_context, function (code) {\n\t\treturn code === 0;\n\t}), _filter.filter).call(_context, function (ok) {\n\t\treturn !ok;\n\t}), _do2._do).call(_context, function () {\n\t\tthrow new FailedBuildError();\n\t});\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/link_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = linkCmd;\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nvar _util = require('./util');\n\nvar _link = require('./link');\n\nvar _concat = require('rxjs/operator/concat');\n\nvar _ArrayObservable = require('rxjs/observable/ArrayObservable');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * can be used in two ways:\n * 1. in order to globally _expose_ the current package (`ied link`).\n * 2. in order to use a previously globally _exposed_ package (`ied link tap`).\n *\n * useful for local development when you want to use a dependency in a\n * different project without publishing to the npm registry / installing from\n * local FS.\n *\n * create a symlink either in the global `node_modules` directory (`ied link`)\n * or in the project's `node_modules` directory (e.g. `ied link tap` would\n * create a symlink in `current-project/node_modules/tap` pointing to a\n * globally installed tap version).\n *\n * @param  {String} cwd - current working directory.\n * @param  {Object} argv - parsed command line arguments.\n * @return {Observable} - observable sequence.\n */\nfunction linkCmd(cwd, argv) {\n  var names = argv._.slice(1);\n\n  if (names.length) {\n    var _context;\n\n    var localNodeModules = _path2.default.join(cwd, 'node_modules');\n    var _init = (0, _util.mkdirp)(localNodeModules);\n    return (0, _concat.concatStatic)(_init, (_context = _ArrayObservable.ArrayObservable.create(names), _mergeMap.mergeMap).call(_context, function (name) {\n      return (0, _link.linkFromGlobal)(cwd, name);\n    }));\n  }\n\n  var init = (0, _concat.concatStatic)((0, _util.mkdirp)(config.globalNodeModules), (0, _util.mkdirp)(config.globalBin));\n  return (0, _concat.concatStatic)(init, (0, _link.linkToGlobal)(cwd));\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/link.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.getSymlinks = getSymlinks;\nexports.linkToGlobal = linkToGlobal;\nexports.linkFromGlobal = linkFromGlobal;\nexports.unlinkToGlobal = unlinkToGlobal;\nexports.unlinkFromGlobal = unlinkFromGlobal;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nvar _ArrayObservable = require('rxjs/observable/ArrayObservable');\n\nvar _util = require('./util');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * generate the symlinks to be created in order to link to passed in package.\n * @param {String} cwd - current working directory.\n * @param {Object} pkgJson - `package.json` file to be linked.\n * @return {Array.<String>} - an array of tuples representing symbolic links to be\n * created.\n */\nfunction getSymlinks(cwd, pkgJson) {\n  var libSymlink = [cwd, _path2.default.join(config.globalNodeModules, pkgJson.name)];\n  var bin = pkgJson.bin;\n  if (typeof bin === 'string') {\n    bin = {};\n    bin[pkgJson.name] = pkgJson.bin;\n  }\n  bin = bin || {};\n  var binSymlinks = Object.keys(bin).map(function (name) {\n    return [_path2.default.join(config.globalNodeModules, pkgJson.name, bin[name]), _path2.default.join(config.globalBin, name)];\n  });\n  return [libSymlink].concat(binSymlinks);\n}\n\n/*\n * globally expose the package we're currently in (used for `ied link`).\n * @param {String} cwd - current working directory.\n * @return {Observable} - observable sequence.\n */\nfunction linkToGlobal(cwd) {\n  var _context;\n\n  return (_context = (_context = (0, _util.readFileJSON)(_path2.default.join(cwd, 'package.json')), _mergeMap.mergeMap).call(_context, function (pkgJson) {\n    return getSymlinks(cwd, pkgJson);\n  }), _mergeMap.mergeMap).call(_context, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        src = _ref2[0],\n        dst = _ref2[1];\n\n    return (0, _util.forceSymlink)(src, dst);\n  });\n}\n\n/**\n * links a globally linked package into the package present in the current\n * working directory (used for `ied link some-package`).\n * the package can be `require`d afterwards.\n * `node_modules/.bin` stays untouched.\n * @param {String} cwd - current working directory.\n * @param {String} name - name of the dependency to be linked.\n * @return {Observable} - observable sequence.\n */\nfunction linkFromGlobal(cwd, name) {\n  var dst = _path2.default.join(cwd, 'node_modules', name);\n  var src = _path2.default.join(config.globalNodeModules, name);\n  return (0, _util.forceSymlink)(src, dst);\n}\n\n/**\n * revert the effects of `ied link` by removing the previously created\n * symbolic links (used for `ied unlink`).\n * @param {String} cwd - current working directory.\n * @return {Observable} - observable sequence.\n */\nfunction unlinkToGlobal(cwd) {\n  var _context2;\n\n  var pkg = require(_path2.default.join(cwd, 'package.json'));\n  var symlinks = getSymlinks(cwd, pkg);\n  return (_context2 = _ArrayObservable.ArrayObservable.create(symlinks), _mergeMap.mergeMap).call(_context2, function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        src = _ref4[0],\n        dst = _ref4[1];\n\n    return (0, _util.unlink)(dst);\n  });\n}\n\n/**\n * revert the effects of `ied link some-package` by removing the previously\n * created symbolic links from the project's `node_modules` directory (used for\n * `ied unlink some-package`).\n * @param {String} cwd - current working directory.\n * @param {String} name - name of the dependency to be unlinked from the\n * project's `node_modules`.\n * @return {Observable} - observable sequence.\n */\nfunction unlinkFromGlobal(cwd, name) {\n  var dst = _path2.default.join(cwd, 'node_modules', name);\n  return (0, _util.unlink)(dst);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/ping_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pingCmd;\n\nvar _ping = require('./ping');\n\n/**\n * ping the registry and print the received response.\n * @return {Subscription} - subscription to the {@link ping} command.\n */\nfunction pingCmd() {\n  return (0, _ping.ping)().subscribe(console.log);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/ping.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ping = ping;\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _config = require('./config');\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * ping the pre-configured npm registry by hitting `/-/ping?write=true`.\n * @return {Observable} - observable sequence of the returned JSON object.\n */\nfunction ping() {\n  var uri = _url2.default.resolve(_config.registry, '-/ping?write=true');\n  return (0, _util.httpGetJSON)(uri);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/run_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = runCmd;\nexports.run = run;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _util = require('./util');\n\nvar _concatMap = require('rxjs/operator/concatMap');\n\nvar _rxjs = require('rxjs');\n\nvar _map = require('rxjs/operator/map');\n\nvar _filter = require('rxjs/operator/filter');\n\nvar _reduce = require('rxjs/operator/reduce');\n\nvar _do2 = require('rxjs/operator/do');\n\nvar _child_process = require('child_process');\n\nvar _config = require('./config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * run a `package.json` script and the related pre- and postscript.\n * @param {String} cwd - current working directory.\n * @param  {Object} argv - command line arguments.\n * @return {Observable} - observable sequence.\n */\nfunction runCmd(cwd, argv) {\n\tvar _context;\n\n\tvar scripts = argv._.slice(1);\n\n\tvar pkgJson = (_context = (0, _util.readFile)(_path2.default.join(cwd, 'package.json'), 'utf8'), _map.map).call(_context, JSON.parse);\n\n\t// if no script(s) have been specified, log out the available scripts.\n\tif (!scripts.length) {\n\t\treturn _do2._do.call(pkgJson, logAvailable);\n\t}\n\n\tvar PATH = [_path2.default.join(cwd, 'node_modules/.bin'), process.env.PATH].join(_path2.default.delimiter);\n\tvar env = _extends({}, process.env, { PATH: PATH });\n\tvar runOptions = { env: env, stdio: 'inherit' };\n\n\treturn (_context = (_context = (_context = (_context = (_context = (_context = _map.map.call(pkgJson, function (_ref) {\n\t\tvar _ref$scripts = _ref.scripts,\n\t\t    scripts = _ref$scripts === undefined ? {} : _ref$scripts;\n\t\treturn scripts;\n\t}), _util.entries).call(_context) // eslint-disable-line no-shadow\n\t, _filter.filter).call(_context, function (_ref2) {\n\t\tvar _ref3 = _slicedToArray(_ref2, 1),\n\t\t    name = _ref3[0];\n\n\t\treturn ~scripts.indexOf(name);\n\t}), _concatMap.concatMap).call(_context, function (_ref4) {\n\t\tvar _context2;\n\n\t\tvar _ref5 = _slicedToArray(_ref4, 2),\n\t\t    name = _ref5[0],\n\t\t    script = _ref5[1];\n\n\t\treturn (_context2 = run(script, runOptions), _map.map).call(_context2, function (code) {\n\t\t\treturn [name, script, code];\n\t\t});\n\t}), _do2._do).call(_context, logCode), _reduce.reduce).call(_context, function (codes, _ref6) {\n\t\tvar _ref7 = _slicedToArray(_ref6, 3),\n\t\t    name = _ref7[0],\n\t\t    script = _ref7[1],\n\t\t    code = _ref7[2];\n\n\t\treturn codes + code;\n\t}, 0), _do2._do).call(_context, function (code) {\n\t\treturn _assert2.default.equal(code, 0, 'exit status != 0');\n\t});\n}\n\nfunction run(script) {\n\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\treturn _rxjs.Observable.create(function (observer) {\n\t\tvar args = [_config.shFlag, script];\n\t\tvar childProcess = (0, _child_process.spawn)(_config.sh, args, options);\n\t\tchildProcess.on('close', function (code) {\n\t\t\tobserver.next(code);\n\t\t\tobserver.complete();\n\t\t});\n\t\tchildProcess.on('error', function (err) {\n\t\t\tobserver.error(err);\n\t\t});\n\t});\n}\n\nfunction logCode(_ref8) {\n\tvar _ref9 = _slicedToArray(_ref8, 3),\n\t    name = _ref9[0],\n\t    script = _ref9[1],\n\t    code = _ref9[2];\n\n\tvar prefix = name + ': `' + script + '`';\n\tif (code === 0) console.log(prefix + ' succeeded');else console.error(prefix + ' failed (exit status ' + code + ')');\n}\n\nfunction logAvailable(_ref10) {\n\tvar _ref10$scripts = _ref10.scripts,\n\t    scripts = _ref10$scripts === undefined ? {} : _ref10$scripts;\n\n\tvar available = Object.keys(scripts);\n\tif (available.length) {\n\t\tconsole.log('available scripts: ' + available.join(', '));\n\t} else {\n\t\tconsole.log('no scripts in package.json');\n\t}\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/shell_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = shellCmd;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _config = require('./config');\n\nvar config = _interopRequireWildcard(_config);\n\nvar _child_process = require('child_process');\n\nvar _util = require('./util');\n\nvar _map = require('rxjs/operator/map');\n\nvar _do2 = require('rxjs/operator/do');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * enter a new session that has access to the CLIs exposed by the installed\n * packages by using an amended `PATH`.\n * @param {String} cwd - current working directory.\n */\nfunction shellCmd(cwd) {\n\tvar _context;\n\n\tvar binPath = _path2.default.join(cwd, 'node_modules/.bin');\n\tvar env = Object.create(process.env);\n\tenv.PATH = [binPath, process.env.PATH].join(_path2.default.delimiter);\n\n\treturn (_context = (_context = (0, _util.readdir)(binPath), _do2._do).call(_context, function (cmds) {\n\t\treturn console.log('\\nadded', cmds.join(', '), '\\n');\n\t}), _map.map).call(_context, function () {\n\t\treturn (0, _child_process.spawn)(config.sh, [], { stdio: 'inherit', env: env });\n\t});\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/unlink_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unlinkCmd;\n\nvar _ArrayObservable = require('rxjs/observable/ArrayObservable');\n\nvar _mergeMap = require('rxjs/operator/mergeMap');\n\nvar _link = require('./link');\n\n/**\n * unlink one or more previously linked dependencies. can be invoked via\n * `ied unlink`. E.g. `ied unlink browserify tap webpack` would unlink all\n * _three_ dependencies.\n * @param  {String} cwd - current working directory.\n * @param  {Object} argv - parsed command line arguments.\n * @return {Observable} - observable sequence.\n */\nfunction unlinkCmd(cwd, argv) {\n  var _context;\n\n  var names = argv._.slice(1);\n\n  return names.length ? (_context = _ArrayObservable.ArrayObservable.create(names), _mergeMap.mergeMap).call(_context, function (name) {\n    return (0, _link.unlinkFromGlobal)(cwd, name);\n  }) : (0, _link.unlinkToGlobal)(cwd);\n}","/home/travis/build/npmtest/node-npmtest-ied/node_modules/ied/lib/version_cmd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = versionCmd;\n\nvar _util = require('./util');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _map = require('rxjs/operator/map');\n\nvar _do2 = require('rxjs/operator/do');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * display the version number.\n * @return {Subscription} - a subscription that logs the versio number to the\n * console.\n */\nfunction versionCmd() {\n  var _context;\n\n  return (_context = (_context = (0, _util.readFileJSON)(_path2.default.join(__dirname, '../package.json')), _map.map).call(_context, function (_ref) {\n    var version = _ref.version;\n    return version;\n  }), _do2._do).call(_context, function (version) {\n    return console.log('ied version ' + version);\n  });\n}"}